{"version":3,"sources":["Components/MainMenu/MainMenu.jsx","Components/GameScreen/City/Cell/Cell.jsx","Components/GameScreen/City/City.jsx","Components/GameScreen/SideList/SideList.jsx","Components/UI/Button/Button.jsx","Components/GameScreen/GameScreen.jsx","Logic/City.js","Logic/PremadeGrids.js","Logic/GameEngine.js","Containers/App.js","serviceWorker.js","index.js","Components/GameScreen/City/Cell/Cell.module.css","Images/logo.png","Components/MainMenu/MainMenu.module.css","Components/GameScreen/SideList/SideList.module.css","Containers/App.module.css","Components/GameScreen/City/City.module.css","Components/GameScreen/GameScreen.module.css"],"names":["MainMenu","props","react_default","a","createElement","className","style","App_header","src","logo","App_logo","onClick","click","alt","Cell","cellStyle","Empty","onclick","main","toggleCell","rowindexcell","columnindexcell","cellValue","Occupied_main","Empty_main","Occupied","City","stylesheet","width","height","index","cityGrid","map","row","City_Cell_Cell","key","SideList","slicedgrids","grids","slice","display","title","list","city","cityIndex","GameScreen_City_City","Button","theme","createMuiTheme","typography","useNextVariants","palette","primary","light","window","getComputedStyle","document","documentElement","getPropertyValue","dark","contrastText","styles","Button_default","boxshadow","variant","color","value","GameScreen","history","Object","toConsumableArray","gameEngine","getCityTurnHistory","reverse","premadeGrids","getCityPremadeGrids","Side1","GameScreen_SideList_SideList","goBackInTime","Container","Title","getCurrentCityGrid","Buttons","group","UI_Button_Button","previousTurn","togglePlay","playStopValue","nextTurn","clearCity","toggleAllowWrapping","wrappingValue","randCity","Side2","setCurrentCityGridFromPremade","classCallCheck","this","WIDTH_OF_CITY","HEIGHT_OF_CITY","initializeCityGrid","Array","i","length","newCityGrid","j","tmp","Math","random","allowWrapping","cellInteraction","column","open","result","openRamensPlaces","offSetx","offSety","setCityGrid","cityGridToSet","PremadeGrids","GameEngine","initializeGame","currentCity","cityTurnHistory","push","getCityGrid","runInteractions","cityTurnToPush","pop","turns","newCityTurnHistory","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","setState","app","assertThisInitialized","isPlaying","isWrapping","_this2","clearInterval","playingInterval","setInterval","checked","_this3","page","Components_MainMenu_MainMenu","startGame","Components_GameScreen_GameScreen","bind","Component","Boolean","location","hostname","match","ReactDOM","render","Containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p","App-logo-spin"],"mappings":"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O,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAClI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAClI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAClI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAClI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAClI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GACjI,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GACjI,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GACjI,EAAC,GAAM,GAAO,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAC/H,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,IAE5H,CAAC,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAGpI,CAAC,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACvI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAEtI,CAAC,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GACrI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAGtI,CAAC,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACvI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACnI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAA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GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GACpI,EAAC,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAM,GAAM,GAChI,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,GAAO,GACpI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACtI,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO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","file":"static/js/main.f8c1d9a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './MainMenu.module.css'\r\nimport logo from '../../Images/logo.png';\r\n\r\nconst MainMenu = (props) => {\r\n    return (\r\n        <div className={ style.MainMenu }>\r\n            <div className={style.App_header}>\r\n\r\n            <p>Snack Wars</p>\r\n            <img src={logo} className={style.App_logo} onClick={props.click} alt=\"logo\" />\r\n            <p>Click the logo to begin</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu\r\n","import React from 'react'\r\nimport style from './Cell.module.css'\r\n\r\nconst Cell = (props) => {\r\n    \r\n    let cellStyle = style.Empty;\r\n    let onclick = null;\r\n\r\n    if(props.main){\r\n        onclick = () => {props.toggleCell(props.rowindexcell,props.columnindexcell)};\r\n\r\n        if(props.cellValue){\r\n            cellStyle = style.Occupied_main;\r\n        }else{\r\n            cellStyle = style.Empty_main;\r\n        }\r\n    }else if(props.cellValue){\r\n        cellStyle = style.Occupied;\r\n    }\r\n\r\n    return (\r\n        <div className={ cellStyle } onClick={  onclick }>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react'\r\nimport style from './City.module.css'\r\nimport Cell from './Cell/Cell.jsx'\r\n\r\nconst City = (props) => {\r\n    let stylesheet = {};\r\n    if(!props.main){\r\n        stylesheet = {\r\n            // position: 'relative',\r\n            // paddingTop: '100%', /* 1:1 Aspect Ratio */\r\n            width: '100px',\r\n            height: '100px',\r\n        }\r\n    }\r\n    return (\r\n        <div className={ style.City } style = {stylesheet} onClick={() => {props.click(props.index)}}>\r\n\r\n            {(props.cityGrid || []).map((row, rowindexcell) => (\r\n                row.map((cellValue, columnindexcell) => (\r\n                    <Cell \r\n                        key={rowindexcell+','+columnindexcell}\r\n                        rowindexcell={rowindexcell} \r\n                        columnindexcell={columnindexcell} \r\n                        cellValue={cellValue}\r\n                        toggleCell={props.toggleCell}\r\n                        main={props.main}>\r\n                    </Cell>\r\n                ))\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default City\r\n","\r\nimport React from 'react'\r\nimport style from './SideList.module.css'\r\nimport City from '../City/City.jsx'\r\n\r\nconst SideList = (props) => {\r\n\r\n    const slicedgrids = props.grids.slice(0,8);\r\n    return (\r\n        <div className={ style.SideList }>\r\n            <div className={ style.display }>\r\n                <h2>{props.title}</h2>\r\n                <div className={style.list}>\r\n                    {( slicedgrids || []).map((city,cityIndex) => (\r\n                        <City key={cityIndex} cityGrid={city} main={false} index={cityIndex} click={props.click} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideList\r\n","import React from 'react';\r\nimport Buttonui from '@material-ui/core/Button';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nfunction Button(props) {\r\n  \r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    palette: {\r\n      primary: {\r\n        light: window.getComputedStyle(document.documentElement)\r\n          .getPropertyValue('--light-main'), // #999999,\r\n        main: window.getComputedStyle(document.documentElement)\r\n          .getPropertyValue('--light-main'), // #999999,\r\n        dark: window.getComputedStyle(document.documentElement)\r\n          .getPropertyValue('--medium-main'), // #999999,\r\n        contrastText: window.getComputedStyle(document.documentElement)\r\n          .getPropertyValue('--title-main'), // #999999,\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Buttonui boxshadow={3} variant=\"contained\" color=\"primary\" onClick={props.click}>\r\n        {props.value}\r\n      </Buttonui>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport style from './GameScreen.module.css'\r\nimport City from './City/City.jsx'\r\nimport SideList from './SideList/SideList.jsx'\r\n\r\nimport Button from '../UI/Button/Button.jsx'\r\nimport logo from '../../Images/logo.png';\r\n\r\nconst GameScreen = (props) => {\r\n\r\n    const history = [...props.gameEngine.getCityTurnHistory()];\r\n    history.reverse();\r\n    const premadeGrids = [...props.gameEngine.getCityPremadeGrids()];\r\n    premadeGrids.reverse();\r\n\r\n    return (\r\n        <div className={style.GameScreen}>\r\n            <div className={style.Side1}>\r\n                <SideList grids={ history } title=\"History\" click={props.goBackInTime}></SideList>\r\n            </div>\r\n            <div className={style.Container}>\r\n                <div className={style.Title}>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>Snack Wars</h1>\r\n                </div>\r\n                \r\n                <City cityGrid={props.gameEngine.getCurrentCityGrid()} toggleCell={props.toggleCell} main={true} click={()=>{}}></City>\r\n\r\n                <div className={style.Buttons}>\r\n                    <div className={style.group}>\r\n                        <Button click={props.previousTurn} value=\"Prev turn\"></Button>\r\n                        <Button click={props.togglePlay} value={props.playStopValue}></Button>\r\n                        <Button click={props.nextTurn} value=\"Next turn\"></Button>\r\n                        <Button click={props.clearCity} value=\"Clear city\"></Button>\r\n                        <Button click={props.toggleAllowWrapping} value={props.wrappingValue}></Button>\r\n                        <Button click={props.randCity} value=\"Randomize city\"></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.Side2}>\r\n                <SideList  grids={ premadeGrids } title=\"Premade\" click={props.setCurrentCityGridFromPremade}></SideList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameScreen\r\n","class City {\r\n\r\n    cityGrid;\r\n    WIDTH_OF_CITY = 20;\r\n    HEIGHT_OF_CITY = 20;\r\n\r\n    constructor() {\r\n        this.cityGrid = this.initializeCityGrid();\r\n        this.clearCity();\r\n    }\r\n\r\n    //This is how we initialize the city\r\n    initializeCityGrid() {\r\n        let cityGrid = new Array(this.HEIGHT_OF_CITY);\r\n\r\n        for (let i = 0; i < cityGrid.length; i++) {\r\n            cityGrid[i] = new Array(this.WIDTH_OF_CITY);\r\n        }\r\n\r\n        return cityGrid;\r\n    }\r\n\r\n    //This is how we clear the city\r\n    clearCity() {\r\n        let newCityGrid = this.initializeCityGrid();\r\n\r\n        for (let i = 0; i < this.HEIGHT_OF_CITY; i++) {\r\n            for (let j = 0; j < this.WIDTH_OF_CITY; j++) {\r\n                //set the cell in {i,j} to be false\r\n                newCityGrid[i][j] = false;\r\n            }\r\n        }\r\n        this.cityGrid = newCityGrid;\r\n    }\r\n\r\n    //This is how we randomize the city\r\n    randCity() {\r\n        let newCityGrid = this.initializeCityGrid();\r\n\r\n        for (let i = 0; i < this.HEIGHT_OF_CITY; i++) {\r\n            for (let j = 0; j < this.WIDTH_OF_CITY; j++) {\r\n                //random boolean\r\n                let tmp = Math.random() >= 0.5;\r\n                //set the cell in {i,j} to be tmp\r\n                newCityGrid[i][j] = tmp;\r\n            }\r\n        }\r\n\r\n        this.cityGrid = newCityGrid;\r\n    }\r\n\r\n    //Testing porpuses\r\n    logCityGrid() {\r\n        let stringGrid = \"[\";\r\n        for (let i = 0; i < this.HEIGHT_OF_CITY; i++) {\r\n            for (let j = 0; j < this.WIDTH_OF_CITY; j++) {\r\n                stringGrid += this.cityGrid[i][j] + \", \"\r\n            }\r\n            stringGrid += \"],\\n[\";\r\n        }\r\n    }\r\n\r\n    //run one iteration on all the cells of the grid\r\n    runInteractions(allowWrapping) {\r\n        let newCityGrid = this.initializeCityGrid();\r\n\r\n        for (let i = 0; i < this.HEIGHT_OF_CITY; i++) {\r\n            for (let j = 0; j < this.WIDTH_OF_CITY; j++) {\r\n                newCityGrid[i][j] = this.cellInteraction(i, j, allowWrapping);\r\n            }\r\n        }\r\n\r\n        this.cityGrid = newCityGrid;\r\n    }\r\n\r\n    //run one iteration on a single cell of the grid\r\n    cellInteraction(row, column, allowWrapping) {\r\n\r\n        let open = this.cityGrid[row][column];\r\n        let result = open;\r\n        let openRamensPlaces = 0;\r\n\r\n        for (let i = -1; i <= 1; i++) {\r\n            for (let j = -1; j <= 1; j++) {\r\n                if (!(i === 0 && j === 0)) {\r\n                    if (allowWrapping) {\r\n                        let offSetx = 0;\r\n                        let offSety = 0;\r\n\r\n                        if (row + i <= -1) {\r\n                            offSetx += this.HEIGHT_OF_CITY;\r\n                        } else if (row + i >= this.HEIGHT_OF_CITY) {\r\n                            offSetx -= this.HEIGHT_OF_CITY;\r\n                        }\r\n                        if (column + j <= -1) {\r\n                            offSety += this.WIDTH_OF_CITY;\r\n                        } else if (column + j >= this.WIDTH_OF_CITY) {\r\n                            offSety -= this.WIDTH_OF_CITY;\r\n                        }\r\n\r\n                        if (this.cityGrid[row + i + offSetx][column + j + offSety]) {\r\n                            openRamensPlaces++;\r\n                        }\r\n                    } else {\r\n                        if ((row + i > -1 && row + i < this.HEIGHT_OF_CITY) && (column + j > -1 && column + j < this.WIDTH_OF_CITY)) {\r\n                            if (this.cityGrid[row + i][column + j]) {\r\n                                openRamensPlaces++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (open) {\r\n            if (openRamensPlaces === 2 || openRamensPlaces === 3) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else if (openRamensPlaces === 3) {\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    //toggle the value of a given cell\r\n    toggleCell(rowindexcell, columnindexcell) {\r\n        let newCityGrid = this.setCityGrid(this.cityGrid);\r\n\r\n        let tmp = newCityGrid[rowindexcell][columnindexcell];\r\n        newCityGrid[rowindexcell][columnindexcell] = !tmp;\r\n    }\r\n\r\n    //sets single cell at {row, column} to the given value\r\n    setCell(row, column, value) {\r\n        this.cityGrid[row][column] = value;\r\n    }\r\n\r\n    //returns the cityGrid\r\n    getCityGrid() {\r\n        return this.cityGrid;\r\n    }\r\n\r\n    //returns the cityGrid\r\n    getNewCityGrid() {\r\n        let newCityGrid = this.initializeCityGrid();\r\n\r\n        for (let i = 0; i < this.WIDTH_OF_CITY; i++) {\r\n            for (let j = 0; j < this.HEIGHT_OF_CITY; j++) {\r\n                newCityGrid[i][j] = this.cityGrid[i][j]\r\n            }\r\n        }\r\n\r\n        return newCityGrid;\r\n    }\r\n\r\n    setCityGrid(cityGridToSet) {\r\n        let newCityGrid = this.initializeCityGrid();\r\n\r\n        for (let i = 0; i < this.WIDTH_OF_CITY; i++) {\r\n            for (let j = 0; j < this.HEIGHT_OF_CITY; j++) {\r\n                //set the cell in {i,j} to be false\r\n                newCityGrid[i][j] = cityGridToSet[i][j];\r\n            }\r\n        }\r\n        this.cityGrid = newCityGrid;\r\n\r\n        return newCityGrid;\r\n    }\r\n}\r\n\r\nexport default City;\r\n\r\n","export default [\r\n    [[false, true, true, true, true, true, false, false, false, false, false, false, false, false, true, true, true, true, true, false,],\r\n    [true, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, true,],\r\n    [true, false, false, true, true, true, false, false, false, false, false, false, false, false, true, true, true, false, false, true,],\r\n    [true, false, true, false, true, false, false, false, false, false, false, false, false, false, false, true, false, true, false, true,],\r\n    [true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, true,],\r\n    [true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, true, true, true, true, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, true, false, true, true, false, true, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, true, true, false, false, true, true, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, true, true, false, false, true, true, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, true, false, true, true, false, true, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, true, true, true, true, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true,],\r\n    [true, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, true,],\r\n    [true, false, true, false, true, false, false, false, false, false, false, false, false, false, false, true, false, true, false, true,],\r\n    [true, false, false, true, true, true, false, false, false, false, false, false, false, false, true, true, true, false, false, true,],\r\n    [true, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, false, false, true,],\r\n    [false, true, true, true, true, true, false, false, false, false, false, false, false, false, true, true, true, true, true, false]],\r\n\r\n    [[false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false,],\r\n    ],\r\n\r\n    [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,]],\r\n\r\n    [[true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true]],\r\n\r\n\r\n    [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, true, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, true, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, true, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, true, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, true, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, true, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]],\r\n\r\n    [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, true, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, true, false, true, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, true, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, true, false, true, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, false, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, false, false, false, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, false, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, true, false, true, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, true, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, true, false, true, false, true, false, true, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, true, false, true, false, true, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]],\r\n\r\n    [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false],\r\n    [false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, false],\r\n    [false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false],\r\n    [false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, false],\r\n    [false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]]\r\n]","import City from './City'\r\nimport PremadeGrids from './PremadeGrids.js'\r\n\r\nclass GameEngine {\r\n\r\n    currentCity;\r\n    cityTurnHistory;\r\n\r\n    constructor() {\r\n        this.initializeGame();\r\n    }\r\n\r\n    //Initialize Game\r\n    initializeGame() {\r\n        this.currentCity = new City();\r\n        this.cityTurnHistory = [];\r\n    }\r\n\r\n    //this is the nextTurn logic\r\n    nextTurn(allowWrapping) {\r\n\r\n        //We save the current grid to cityTurnHistory\r\n        this.cityTurnHistory.push(this.currentCity.getCityGrid());\r\n        //Check all neighboring cells of every cell and apply update if they close, open or remain at their state\r\n        this.currentCity.runInteractions(allowWrapping);\r\n        //reset screen\r\n    }\r\n\r\n    //This is how we clear the city\r\n    clearCity() {\r\n        //We save the current grid to cityTurnHistory\r\n        this.cityTurnHistory.push(this.currentCity.getCityGrid());\r\n        //clearCity\r\n        this.currentCity.clearCity();\r\n    }\r\n\r\n    //This is how we randomize the city\r\n    randCity() {\r\n\r\n        //We save the current grid to cityTurnHistory\r\n        this.cityTurnHistory.push(this.currentCity.getCityGrid());\r\n        //randCity\r\n        this.currentCity.randCity();\r\n    }\r\n\r\n    //This is how we toggleCell\r\n    toggleCell(rowindexcell, columnindexcell) {\r\n        //We save the current grid to cityTurnHistory\r\n        const cityTurnToPush = this.currentCity.getCityGrid()\r\n\r\n        this.cityTurnHistory.push([...cityTurnToPush]);\r\n        //toggleCell\r\n        this.currentCity.toggleCell(rowindexcell, columnindexcell);\r\n    }\r\n\r\n    //this is the nextTurn logic\r\n    previousTurn() {\r\n\r\n        if (this.cityTurnHistory.length > 0) {\r\n            //We save the current grid to cityTurnHistory\r\n            this.currentCity.setCityGrid(this.cityTurnHistory.pop());\r\n            //reset screen\r\n        }\r\n    }\r\n\r\n    goBackInTime(turns) {\r\n        if (this.cityTurnHistory.length > 0) {\r\n            let newCityTurnHistory = this.cityTurnHistory.slice(0, this.cityTurnHistory.length - turns);\r\n            // console.log(newCityTurnHistory);\r\n\r\n            this.cityTurnHistory = newCityTurnHistory;\r\n            this.currentCity.setCityGrid(this.cityTurnHistory.pop());\r\n        }\r\n    }\r\n\r\n    //get the currentCity grid\r\n    getCurrentCityGrid() {\r\n        return this.currentCity.getCityGrid();\r\n    }\r\n\r\n    setCurrentCityGridFromPremade(index) {\r\n\r\n        //We save the current grid to cityTurnHistory\r\n        this.cityTurnHistory.push(this.currentCity.getCityGrid());\r\n        this.currentCity.setCityGrid(this.getCityPremadeGrids()[PremadeGrids.length - index - 1]);\r\n    }\r\n\r\n    getCurrentCity() {\r\n        return this.currentCity;\r\n    }\r\n\r\n    getCityTurnHistory() {\r\n        return this.cityTurnHistory;\r\n    }\r\n\r\n    getCityPremadeGrids() {\r\n        return PremadeGrids;\r\n    }\r\n}\r\n\r\nexport default GameEngine;\r\n","import React, { Component } from 'react';\r\nimport style from './App.module.css';\r\nimport MainMenu from '../Components/MainMenu/MainMenu.jsx'\r\nimport GameScreen from '../Components/GameScreen/GameScreen.jsx'\r\nimport GameEngine from '../Logic/GameEngine'\r\n\r\nclass App extends Component {\r\n\r\n  playingInterval;\r\n  isPlaying;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //TODO: remove this later\r\n    window.app = this;\r\n    const gameEngine = new GameEngine();\r\n\r\n    this.state = {\r\n      gameEngine: gameEngine,\r\n      display: false,\r\n      isPlaying : false,\r\n      isWrapping: false,\r\n      playStopValue:'Play',\r\n      wrappingValue:'Wrap',\r\n    };\r\n  }\r\n\r\n  startGame(){\r\n    this.setState({display:true});\r\n  }\r\n\r\n  // ---   TOGGLES   ----\r\n  togglePlay(){\r\n    //TODO: Fix logic\r\n    let isPlaying = !this.state.isPlaying;\r\n    this.setState({isPlaying:isPlaying}) ;\r\n\r\n    if(this.state.isPlaying){            \r\n      clearInterval(this.playingInterval); \r\n      this.setState({playStopValue:'Play'});\r\n    }else{\r\n      this.playingInterval = setInterval(() => this.nextTurn(),700);\r\n      this.setState({playStopValue:'Stop'});\r\n    }    \r\n  }\r\n\r\n  toggleAllowWrapping(checked){\r\n    let allowWrapping = !this.state.allowWrapping;\r\n    this.setState({allowWrapping:allowWrapping});\r\n\r\n    if(this.state.allowWrapping){         \r\n      this.setState({wrappingValue:'Wrap'});\r\n    }else{\r\n      this.setState({wrappingValue:'Dont Wrap'});\r\n    }\r\n  }\r\n\r\n  // ---   gameEngine METHODS   ----\r\n  nextTurn = () => {\r\n    this.state.gameEngine.nextTurn(this.state.allowWrapping);\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n\r\n  previousTurn = () => {\r\n    this.state.gameEngine.previousTurn();\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n\r\n  randCity = () => {\r\n    this.state.gameEngine.randCity();\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n\r\n  clearCity = () => {\r\n    this.state.gameEngine.clearCity();\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n\r\n  toggleCell = (rowindexcell,columnindexcell) => {\r\n    this.state.gameEngine.toggleCell(rowindexcell,columnindexcell);\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n\r\n  setCurrentCityGridFromPremade = (index) => {\r\n    this.state.gameEngine.setCurrentCityGridFromPremade(index);\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n\r\n  goBackInTime = (turns) => {\r\n    this.state.gameEngine.goBackInTime(turns);\r\n    this.setState({gameEngine:this.state.gameEngine});\r\n  }\r\n  \r\n  render() {\r\n    let page = <MainMenu click={()=> {this.startGame()}}></MainMenu>;\r\n\r\n    if(this.state.display){\r\n      page = <GameScreen \r\n              gameEngine={this.state.gameEngine}\r\n              goBackInTime={this.goBackInTime.bind(this)}\r\n              setCurrentCityGridFromPremade={this.setCurrentCityGridFromPremade.bind(this)}\r\n              previousTurn={this.previousTurn.bind(this)}\r\n              nextTurn={this.nextTurn.bind(this)}\r\n              randCity={this.randCity.bind(this)}\r\n              clearCity={this.clearCity.bind(this)}\r\n              togglePlay={this.togglePlay.bind(this)}\r\n              playStopValue={this.state.playStopValue}\r\n              toggleCell={this.toggleCell.bind(this)}\r\n              wrappingValue={this.state.wrappingValue}\r\n              toggleAllowWrapping={this.toggleAllowWrapping.bind(this)}>\r\n            </GameScreen>\r\n    }\r\n\r\n    return (\r\n      <div className={style.App}>\r\n        {page}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './root.css';\r\nimport App from './Containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Empty_main\":\"Cell_Empty_main__1VuHH\",\"Occupied_main\":\"Cell_Occupied_main__3f-Gg\",\"Empty\":\"Cell_Empty__1j34J\",\"Occupied\":\"Cell_Occupied__k4YJS\"};","module.exports = __webpack_public_path__ + \"static/media/logo.4434792f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenu\":\"MainMenu_MainMenu__23EmJ\",\"App_logo\":\"MainMenu_App_logo__ar5HX\",\"App-logo-spin\":\"MainMenu_App-logo-spin__2mgFz\",\"App_header\":\"MainMenu_App_header__2tRZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideList\":\"SideList_SideList__3VceQ\",\"display\":\"SideList_display__1Udml\",\"list\":\"SideList_list__1a48i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__o-7yT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"City\":\"City_City__3jpY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameScreen\":\"GameScreen_GameScreen__CkX8g\",\"Side1\":\"GameScreen_Side1__3sSyj\",\"Side2\":\"GameScreen_Side2__1fMH4\",\"Container\":\"GameScreen_Container__YZPEF\",\"Title\":\"GameScreen_Title__1eLs8\",\"Buttons\":\"GameScreen_Buttons__2GSo0\",\"group\":\"GameScreen_group__24lLN\"};"],"sourceRoot":""}